
# vulnerability_scanner.py - Basic Vulnerability and Misconfiguration Scanning

import mysql.connector
import psycopg2
from db_connection import connect_mysql, connect_postgresql

# Example vulnerability checks
def check_weak_passwords(connection, db_type="mysql"):
    # Placeholder function to check for weak passwords
    try:
        cursor = connection.cursor()
        if db_type == "mysql":
            cursor.execute("SELECT user, authentication_string FROM mysql.user WHERE LENGTH(authentication_string) < 8;")
        elif db_type == "postgresql":
            cursor.execute("SELECT usename, passwd FROM pg_shadow WHERE LENGTH(passwd) < 8;")
        weak_users = cursor.fetchall()
        if weak_users:
            print(f"[WARNING] Weak passwords found for users: {weak_users}")
        else:
            print("[INFO] No weak passwords detected.")
    except Exception as e:
        print(f"[ERROR] Failed to check weak passwords: {e}")

def check_public_access(connection, db_type="mysql"):
    # Placeholder function to check for public access permissions
    try:
        cursor = connection.cursor()
        if db_type == "mysql":
            cursor.execute("SELECT user, host FROM mysql.user WHERE host = '%';")
        elif db_type == "postgresql":
            cursor.execute("SELECT usename, useconfig FROM pg_shadow WHERE useconfig @> '{host=%}';")
        public_users = cursor.fetchall()
        if public_users:
            print(f"[WARNING] Public access detected for users: {public_users}")
        else:
            print("[INFO] No public access detected.")
    except Exception as e:
        print(f"[ERROR] Failed to check public access: {e}")

# Run basic vulnerability checks
def run_vulnerability_checks():
    mysql_conn = connect_mysql()
    if mysql_conn:
        print("[INFO] Running checks on MySQL...")
        check_weak_passwords(mysql_conn, db_type="mysql")
        check_public_access(mysql_conn, db_type="mysql")
        mysql_conn.close()

    pg_conn = connect_postgresql()
    if pg_conn:
        print("[INFO] Running checks on PostgreSQL...")
        check_weak_passwords(pg_conn, db_type="postgresql")
        check_public_access(pg_conn, db_type="postgresql")
        pg_conn.close()

if __name__ == "__main__":
    run_vulnerability_checks()
